.\" Generated by scdoc 1.11.3
.\" Complete documentation for this program is not available as a GNU info page
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.nh
.ad l
.\" Begin generated content:
.TH "CSN-TOOL" "1" "2024-11-01"
.PP
.SH NAME
.PP
csn-tool - casync-nano helper tool
.PP
.SH SYNOPSIS
.PP
\fBcsn-tool\fR crypt \fIKEYSPEC\fR \fIINPUT_PATH\fR [\fIOUTPUT_PATH\fR]
.PP
.SH DESCRIPTION
.PP
csn-tool is a helper tool that contains functionality that is useful for
managing casync-nano based infrastructure, but is not needed on the target
device itself.\&
.PP
.SH COMMANDS
.PP
\fBcsn-tool\fR crypt \fIKEYSPEC\fR [\fIINPUT_PATH\fR] [\fIOUTPUT_PATH\fR]
.PP
Performs encryption and decryption of chunks.\& Since the chunk encryption
algorithm in casync-nano is self-inverse, both operations are executed using
the same command.\& To avoid repetition, only the term "encryption" is used in
this section.\&
.PP
\fIKEYSPEC\fR describes how the encryption key is obtained.\& In each case, the 32
byte key is represented in hexadecimal.\& Possible values for \fIKEYSPEC\fR are:
.PP
.PD 0
.IP \(bu 4
\fIkey:HEXSTRING\fR - supplies the key literally through the command line.\& The
usual caveats about this making it visible to other processes on the system
apply.\&
.IP \(bu 4
\fIenv:NAME\fR - read the key from the environment variable \fINAME\fR
.IP \(bu 4
\fIfile:PATH\fR - read the key from the file at \fIPATH\fR
.PD
.PP
The file name at \fIINPUT_PATH\fR must follow the casync naming convention (namely,
its 32 byte chunk ID in hexadecimal followed by .\&cacnk or .\&cacnk.\&enc).\&
.PP
If both \fIINPUT_PATH\fR and \fIOUTPUT_PATH\fR are supplied, the input file is
encrypted and the output is stored at the supplied output path.\& If
\fIOUTPUT_PATH\fR is \fB-\fR, the output will be written to standard out.\&
.PP
If only \fIINPUT_PATH\fR is supplied, \fIOUTPUT_PATH\fR is determined based on the
input path.\& Namely, if the input file is a .\&cacnk file, the output file is the
corresponding .\&cacnk.\&enc file in the same directory and vice versa.\&
.PP
If neither \fIINPUT_PATH\fR nor \fIOUTPUT_PATH\fR are supplied, csn-tool reads a list
of files from standard input and encrypts each one in turn, automatically
deriving the output path for each one.\& This is useful when encrypting an entire
chunk store, for example:
.PP
.RS 4
find .\&/default.\&castr/ -name *.\&cacnk | csn-tool crypt file:.\&/key
.PP
.RE
In each case, if the output file already exists, it is not modified.\&
.PP
.SH BUG REPORTS
.PP
Please report bugs in casync-nano or errors in this manual page via GitHub
(https://github.\&com/florolf/casync-nano/issues) or email (\fIfl@n621.\&de\fR).\&
.PP
.SH SEE ALSO
\fIcsn\fR(1)
.br
